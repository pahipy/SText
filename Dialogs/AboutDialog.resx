<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ForkMe.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        T+E9nEwAAAAASUVORK5CYII=
</value>
  </data>
</root>